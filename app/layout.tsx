// Załóżmy, że plik znajduje się w: ecydex/app/layout.tsx
"use client"
import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import { ContextProvider } from '../context'; // Dostosuj ścieżkę importu zgodnie z potrzebami
import './globals.css';
import Navbar from '@/components/main/Navbar';

// Przykładowa funkcja, która przekształca ciasteczka na stan początkowy.
// Należy ją dostosować do swoich potrzeb.
const clientCookieToInitialState = (cookies) => {
  // Tutaj logika przekształcająca ciasteczka na stan początkowy.
  // Na potrzeby przykładu zwracamy pusty obiekt.
  return {};
};

function RootLayout({ children }) {
  const [initialState, setInitialState] = useState({});

  useEffect(() => {
    // Przykład inicjalizacji stanu na podstawie ciasteczek po stronie klienta.
    // `document.cookie` jest dostępne tylko po stronie klienta.
    const cookies = document.cookie;
    const initialStateFromCookies = clientCookieToInitialState(cookies);
    setInitialState(initialStateFromCookies);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        {/* Tutaj można dodać dodatkowe elementy <Head> */}
      </Head>
      <ContextProvider initialState={initialState}>
        <Navbar />
        {/* Tutaj renderujemy dzieci (komponenty) przekazane do RootLayout */}
        {children}
      </ContextProvider>
    </>
  );
}

export default RootLayout;
